@charset "utf-8";/*если находимся в японии то всегда использует utf-8*/
html {
  font-size: 16px;
}


/* 「тут нужно настраивать все по отдельности */

/* отвечает за padding b что то на то подобное нужно конкретно спроектировать это!! запомни*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  line-height: normal;
  font-family: "Helvetica Neue", Arial, "Hiragino Kaku Gothic ProN",
    "Hiragino Sans", Meiryo, sans-serif;
  background: rgb(233, 168, 227);
  overflow: hidden;
  background-image: url(../img/meguro.jpg);
  background-repeat: no-repeat;
  background-size: cover;
}

p {
  margin: 0;
  padding: 0;
}

header { /*заглавная то что отвечает за вверхнию часть*/
  margin-top: 40px;
  color: rgba(253, 4, 120, 0.5) ; 
  font-size: 38px;
  font-weight: bold;
  text-shadow: 5px 5px 5px rgba(255, 255, 255,0.65);
  text-align: center;
}

.wrapper {
  position: relative;
  max-width: 100vw;
  min-height: 100vh;
  margin: 0px;
  padding: 0px;
  padding-bottom: 23px;
  text-align: center;
}

#btn1 {
  position: relative;
  margin: 20px auto;
  width: 200px;
  height: 400px;
  background-image: url(../img/omikuji.png);
  background-size: contain;
  background-repeat: no-repeat;  
  cursor: pointer;
  user-select: none;
}
#btn1:hover {
  animation: shaking 0.3s infinite;
}

@keyframes shaking{ /* а этот код отвечает за то чтобы она трескалась либо же была дрожь*/


  0% {transform: translate(0px,0px) rotateZ(0deg)}
  25% {transform: translate(2px,2px) rotateZ(1deg)}
  50% {transform: translate(0px,2px) rotateZ(0deg)}
  75% {transform: translate(2px,0px) rotateZ(-1deg)}
  100% {transform: translate(0px,0px) rotateZ(0deg)}
}

#btn1:active {
  position: relative;
  top: 5px;
  left: 5px;
  box-shadow: 0 5px 0 grey;
}
/*это отвечает за размер и место */
#omikujiText{
  position: relative;
  margin: 10px auto;
  font-weight:800;
  text-shadow: 3px 3px 3px rgba(255, 255, 255,0.65);
  transition: 1s;

}

footer> p {
  position: absolute;
  bottom: 5px;
  width: 100%;
  margin: 0px;
  padding: 1px;
  color: whitesmoke;
  font: 16px Rajdhani;
  text-align: center;
  background: rgba(1, 24, 31, 0.7);
}
/* размеры козырька */
.shutter{
  position: fixed;
  top:0;
  left:0;
  right:0;
  bottom:0;
  z-index: 9999;
  margin: 0em;
  padding: 0em;
  background-color: #1e1e1e;
  animation: byeShutter 2.5s forwards;
  }
  .shutter::before{
    content: '';
    position: absolute;
    top:0;
    left:0;
    bottom:0;
    width: 0;
    margin: auto;
    background-color: #fff;
    animation: shutterOpen 2.5s forwards;

  }
/* тут нужно чотко написать код который будет олицетворять наш входной порог короче говоря козырёк*/
  @keyframes byeShutter{
    70%{
      opacity: 1;
    }
    100%{
      opacity: 0;
      display: none;
      z-index: -1;
    }
  }
  /* а это будет отвечать за козырёк ====== */






  @keyframes shutterOpen{
  0%{
    width:0;
    height: 0.05em;
  }
  50% {
    width: 100%;
    height: 0.05em;
      }
      90%{
        width: 100%;
        height: 100%;
      }
      100%{
        width: 100%;
        height: 100%;
      }
}

@media screen and (max-width: 480px){ /* это отвечает за мобильное */
  body{

  background-position: 50% 0%;
  background-size: auto 1000px;
    }

  header{
    margin-top: 20px;
    font-size: 30px;
    color: aqua;
    
  }
  /*это отвечает за кнопку что каждый раз меняется при нажатии*/
  #btn1{
    width: 150px;
    height: 280px;
  }
 
 
  #omikujiText{
    margin: 0;
  }
}
.back{
  text-align: left;
}
#btn99{
padding: 0.5em;
border-radius: 0.3em;
color: whitesmoke;
font-size: 1.5em;
background: rgb(26, 212, 212);
cursor: pointer; /*カーソルをポインターの形（かたち）にする*/
}
